The goal is to parse incoming data from a weekly ad pamphlet into a dataset that can be used for further analysis.

The dataset will contain the following columns:

`brand_name`: Specifies the manufacturer or company name associated with the product. ONLY ONE brand name should be listed per row, even if the coupon is valid for multiple brands, in which case, each brand should have its row.
`product_name`: Identifies the model of the product, such as "Toaster" or "Laundry Detergent." This field should be distinct from the brand name and provide a clear description of the product.
`product_variety`: Describes the specific version or variant of the product, such as size, weight, or flavor. This detail is essential for distinguishing between different options within the same product line. This should be a separate field from the product name. It should be for modifiers such as size, weight, flavor, etc.
`description`: Provides a narrative or detailed explanation of the product. It's vital for understanding what's included and ensuring the primary product's features are clearly communicated.
`required_purchase_quantity`: Indicates how many units of a product must be bought to qualify for the deal. This parameter is key for understanding bulk purchase requirements or minimum quantity conditions.
`required_purchase_amount`: The minimum spend required to avail of the deal, important for deals where the discount is triggered by the total purchase value rather than the quantity of specific products.
`price`: Lists the product's price, including any specific conditions like 'each' or 'per pound'. This information is critical for cost comparison and understanding the deal's value.
`sale_percent_off`: The discount percentage available on the product, essential for calculating savings on deals offering a percentage reduction in price.
`sale_amount_off`: The fixed dollar amount discounted from the product, necessary for understanding the immediate savings on an item without calculating percentages.
`sale_price`: The promotional price of the product, providing a straightforward understanding of what a customer will pay during the sale.
`deal_type`: Categorizes the deal into predefined types such as percentage off, amount off, or buy X get Y deals. This classification aids in filtering and comparing deals across similar types.
    - PERCENT_OFF: This type signifies a deal that offers a percentage discount off the regular price of a product. Deals of this nature are straightforward discounts that reduce the product's price by a specified percentage.
    - AMOUNT_OFF: Represents deals where a fixed dollar amount is deducted from the product's price. This type is commonly used for direct savings on a product, regardless of its initial price.
    - BUY_X_GET_Y_AT_Z_PER_OFF: Indicates a deal where purchasing a specified quantity of a product (X) qualifies the buyer to get a certain quantity (Y) of the same or different product at a percentage discount (Z% off).
    - BUY_X_GET_Y_AT_Z_AMO_OFF: Similar to the previous, this deal type offers a specified quantity (Y) of a product at a fixed dollar discount (Z amount off) after purchasing a certain quantity (X).
    - BUY_X_GET_Y_FREE: A promotional offer where buying a certain quantity of a product (X) entitles the buyer to get another quantity (Y) of the same or different product for free.
    - BUY_X_GET_Y_AMOUNT_OFF: This deal type provides a specific discount amount off the total price when a certain quantity of a product is purchased. It's a variant that combines quantity purchases with fixed amount discounts.
    - PRICE_PER_AMOUNT: Deals classified under this type involve selling a product at a special price per unit of measure (e.g., per pound, per kilogram), typically used for bulk or weight-based items.
    - SALE_PRICE: This type refers to a straightforward sale where products are offered at a reduced sale price, distinct from regular discounts or complex promotions.
    - OTHER: A catch-all category for deals that do not fit into the predefined categories, accommodating unique or less common promotional structures.
`quantity_at_sale_price`: ONLY used if the deal type is SALE_PRICE. This field specifies the quantity of the product that can be purchased at the sale price. It's essential for understanding the sale's terms and conditions. This is an integer value.
`quantity_at_amount_off`: ONLY used if the deal type is AMOUNT_OFF. This field indicates the quantity of the product that must be purchased to avail of the fixed dollar discount. It's crucial for understanding the deal's requirements. This is an integer value.
`quantity_at_percent_off`: ONLY used if the deal type is PERCENT_OFF. This field denotes the quantity of the product that must be purchased to qualify for the percentage discount. It's vital for understanding the deal's terms. This is an integer value.
`quantity_get_free`: ONLY used if the deal type is BUY_X_GET_Y_FREE. This field specifies the quantity of the product that can be obtained for free after purchasing the required quantity. It's essential for understanding the deal's structure. This is an integer value.
`requires_store_card`: Indicates whether a store loyalty card is necessary to access the deal, crucial for customers needing to know if membership or subscription is required. This may be referred to as a "Digital Coupon" or "Rewards". This is a boolean field.
`valid_from`: These fields denote the validity period of the deal, helping customers and systems identify current and upcoming promotions.
`valid_to`: These fields denote the validity period of the deal, helping customers and systems identify current and upcoming promotions.

Important Considerations:
- Raw data may be provided in "raw_text" key. This data should be parsed and parsed into the structured dataset described above. DO NOT include the raw text in the final dataset.
- Attempt to extract brand data if it's not explicitly mentioned in the product name or variety. The brand is a crucial identifier for products, and its inclusion can enhance the dataset's utility.
- Avoid including general terms like "Assorted" or "Selected Varieties" in the product name or variety. These terms are vague and do not provide specific information about the brand. It's alright to include them in the description field if necessary.
- Use UTF-8 encoding for the dataset, avoiding any special characters or symbols that may cause issues during data processing. The dataset should be saved as a CSV file.
- Ensure that if a coupon is valid for multiple brands or products, it MUST split into individual rows for each product, brand, and/or variety. It's alright to have duplicate rows for the same coupon - as long as the product name and variety are different.

Example Brand Names:
- Tide
- Coca-Cola
- Kellogg's
- Eggo
- Bounty
- Charmin
- Eggland's Best
- Tropicana
- Quaker
- Gatorade
- Frito-Lay

Example Product Names:
- Cereal
- Juice
- Paper Towels
- Laundry Detergent
- Chips

Example Product Varieties:
- 12 oz
- 24 pack
- 2-ply
- 1 dozen
- 1 gallon

Think carefully, and remember that the goal is not to reiterate the data but to transform it into a structured dataset that can be easily analyzed and queried.
This means processing the data, not just copying it into a new format. Think about possible brand names, and attempt to split them from the product variety, even if they are not explicitly split.

Here's the input JSON data. Return the data using the `returnData()` function.